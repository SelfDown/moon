// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameDeployTasklist = "deploy_tasklist"

// DeployTasklist mapped from table <deploy_tasklist>
type DeployTasklist struct {

	/*
		部署是否完成
		0 部署未完成
		1 部署完成。
	*/
	DeployFlag          *string `gorm:"column:deploy_flag" json:"deploy_flag"`
	DepTaskID           string  `gorm:"column:dep_task_id;primaryKey" json:"dep_task_id"`
	ServerID            string  `gorm:"column:server_id;not null" json:"server_id"` // 服务器ID
	WarArtifactid       string  `gorm:"column:war_artifactid;not null" json:"war_artifactid"`
	WarGroupid          string  `gorm:"column:war_groupid;not null" json:"war_groupid"`
	Notes               string  `gorm:"column:notes;not null" json:"notes"`
	HospitalCode        *string `gorm:"column:hospital_code" json:"hospital_code"`         // 院区
	Appstatu            *string `gorm:"column:appstatu" json:"appstatu"`                   // jboss应用HTTP状态
	Lastversion         *string `gorm:"column:lastversion" json:"lastversion"`             // 最后一次部署的版本号
	Lastglobalgroupid   *string `gorm:"column:lastglobalgroupid" json:"lastglobalgroupid"` // 最近一次使用的global文件ID
	Deploydir           *string `gorm:"column:deploydir" json:"deploydir"`
	Appurl              *string `gorm:"column:appurl" json:"appurl"`           // 程序网址,用于检查状态
	Deploystatu         *string `gorm:"column:deploystatu" json:"deploystatu"` // 应用部署状态
	Locked              *string `gorm:"column:locked" json:"locked"`           // 部署锁定状态 1 表示被锁 0 未被锁，可以部署
	EnvCode             *string `gorm:"column:env_code" json:"env_code"`
	GlobalGroupID       *string `gorm:"column:global_group_id" json:"global_group_id"`
	InstallSoftID       *string `gorm:"column:install_soft_id" json:"install_soft_id"`
	Orderindex          *int32  `gorm:"column:orderindex" json:"orderindex"`
	Lastdeployver       *string `gorm:"column:lastdeployver" json:"lastdeployver"`                 // 上一次部署成功的版本号
	PublishReqVer       *string `gorm:"column:publish_req_ver" json:"publish_req_ver"`             // 升级单离线下载后，将下载时候的WAR版本更新到此，用于下次离线部署的新旧版本对比
	WarRemotefilesize   *string `gorm:"column:war_remotefilesize" json:"war_remotefilesize"`       // war包大小
	WarDownloadPercent  *string `gorm:"column:war_download_percent" json:"war_download_percent"`   // 下载进度
	WarDownloadComplete *string `gorm:"column:war_download_complete" json:"war_download_complete"` // 0 待下载，下载完成。
	OpUser              *string `gorm:"column:op_user" json:"op_user"`                             // userid
	WarDownloadSpeed    *string `gorm:"column:war_download_speed" json:"war_download_speed"`       // 下载速度
	BeforehandID        *string `gorm:"column:beforehand_id" json:"beforehand_id"`                 // 预下载UUID,用于预部署读取目录路径。
	ThreadName          *string `gorm:"column:thread_name" json:"thread_name"`                     // 任务现场号
	ArtifactPath        *string `gorm:"column:artifact_path" json:"artifact_path"`                 // 最近一次下载的war包存放路径
	ArtifactMd5         *string `gorm:"column:artifact_md5" json:"artifact_md5"`                   // 最近一次下载的war包文件md5
	/*
		check.war web状态
		值：存HTTP_code
	*/
	CheckWarStatusCode        *string    `gorm:"column:check_war_status_code" json:"check_war_status_code"`
	Deploy                    *int32     `gorm:"column:deploy_" json:"deploy_"`
	FrameworkVersion          *string    `gorm:"column:framework_version" json:"framework_version"`                        // java应用依赖的框架版本
	CreateTime                *time.Time `gorm:"column:create_time;not null;default:CURRENT_TIMESTAMP" json:"create_time"` // 记录创建时间（数据库自动写入）
	ModifyTime                *time.Time `gorm:"column:modify_time;not null;default:CURRENT_TIMESTAMP" json:"modify_time"` // 记录修改时间（数据库自动写入）
	Comments                  *string    `gorm:"column:comments" json:"comments"`
	StabilityAssuranceEventID *string    `gorm:"column:stability_assurance_event_id" json:"stability_assurance_event_id"` // 稳定性保障中心操作事件ID
	JbossCliPid               *string    `gorm:"column:jboss_cli_pid" json:"jboss_cli_pid"`                               // jboss_cli进程ID
	JbossCliPidStartTime      *time.Time `gorm:"column:jboss_cli_pid_start_time" json:"jboss_cli_pid_start_time"`         // jboss cli 进程启动时间
	Checkwarstatu             *string    `gorm:"column:checkwarstatu" json:"checkwarstatu"`
	SingledepBakPath          *string    `gorm:"column:singledep_bak_path" json:"singledep_bak_path"`
	IPAddress                 *string    `gorm:"column:ip_address" json:"ip_address"`
	DomainName                *string    `gorm:"column:domain_name" json:"domain_name"`
	DomainNameAddress         *string    `gorm:"column:domain_name_address" json:"domain_name_address"`
	EnvConfTemplateID         *string    `gorm:"column:env_conf_template_id" json:"env_conf_template_id"`
	RestartDetail             *string    `gorm:"column:restart_detail" json:"restart_detail"`
	StopDetail                *string    `gorm:"column:stop_detail" json:"stop_detail"`
}

// TableName DeployTasklist's table name
func (*DeployTasklist) TableName() string {
	return TableNameDeployTasklist
}

func (*DeployTasklist) PrimaryKey() []string {
	return []string{"dep_task_id"}
}