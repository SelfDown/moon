// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameDishType = "dish_type"

// DishType mapped from table <dish_type>
type DishType struct {
	DishTypeID   string  `gorm:"column:dish_type_id;primaryKey" json:"dish_type_id"` // 主机
	Name         *string `gorm:"column:name" json:"name"`                            // 大盘类型显示名称
	TypeIcon     *string `gorm:"column:type_icon" json:"type_icon"`
	IsDefault    *string `gorm:"column:is_default" json:"is_default"`       // 是否默认，1默认
	ShowComputer *string `gorm:"column:show_computer" json:"show_computer"` // 是否能显示主机信息
	Tags         *string `gorm:"column:tags" json:"tags"`                   // zabbix 面板的tag。多个以英文逗号隔开
	Comments     *string `gorm:"column:comments" json:"comments"`           // 备注
	OrderIndex   *int32  `gorm:"column:order_index" json:"order_index"`
	Rule         *string `gorm:"column:rule" json:"rule"` // 拼接路径替换规则
	IsServerDish *string `gorm:"column:is_server_dish" json:"is_server_dish"`
	GrafanaUID   *string `gorm:"column:grafana_uid" json:"grafana_uid"`
	GrafanaTitle *string `gorm:"column:grafana_title" json:"grafana_title"`
	GrafanaURL   *string `gorm:"column:grafana_url" json:"grafana_url"`
	ProjectID    *string `gorm:"column:project_id" json:"project_id"`
	Pid          *string `gorm:"column:pid" json:"pid"`
}

// TableName DishType's table name
func (*DishType) TableName() string {
	return TableNameDishType
}

func (*DishType) PrimaryKey() []string {
	return []string{"dish_type_id"}
}