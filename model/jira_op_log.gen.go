// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameJiraOpLog = "jira_op_log"

// JiraOpLog mapped from table <jira_op_log>
type JiraOpLog struct {
	JiraLogID     string  `gorm:"column:jira_log_id;primaryKey" json:"jira_log_id"`
	CreateUser    *string `gorm:"column:create_user" json:"create_user"`
	CreateTime    *string `gorm:"column:create_time" json:"create_time"`
	Op            *string `gorm:"column:op" json:"op"`
	ProjectKey    *string `gorm:"column:project_key" json:"project_key"`
	Summary       *string `gorm:"column:summary" json:"summary"`
	Description   *string `gorm:"column:description" json:"description"`
	Label         *string `gorm:"column:label" json:"label"`
	Assignee      *string `gorm:"column:assignee" json:"assignee"`
	ComponentName *string `gorm:"column:component_name" json:"component_name"`
	FixVersion    *string `gorm:"column:fix_version" json:"fix_version"`
	Reporter      *string `gorm:"column:reporter" json:"reporter"`
	Priority      *string `gorm:"column:priority" json:"priority"`
	IssueType     *string `gorm:"column:issue_type" json:"issue_type"`
	HasScript     *string `gorm:"column:has_script" json:"has_script"`
	Duedate       *string `gorm:"column:duedate" json:"duedate"`
	Beans         *string `gorm:"column:beans" json:"beans"`
	Msg           *string `gorm:"column:msg" json:"msg"`
	Success       *string `gorm:"column:success" json:"success"`
	IssueKey      *string `gorm:"column:issue_key" json:"issue_key"`
}

// TableName JiraOpLog's table name
func (*JiraOpLog) TableName() string {
	return TableNameJiraOpLog
}

func (*JiraOpLog) PrimaryKey() []string {
	return []string{"jira_log_id"}
}