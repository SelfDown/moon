// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameOpenJobEvent = "open_job_event"

// OpenJobEvent mapped from table <open_job_event>
type OpenJobEvent struct {
	ID                 int32   `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	OpenJobEventID     string  `gorm:"column:open_job_event_id;not null" json:"open_job_event_id"` // 事件ID,uuid
	OpenJobEventDetail *string `gorm:"column:open_job_event_detail" json:"open_job_event_detail"`  // 事件细节
	ActionCodeID       *string `gorm:"column:action_code_id" json:"action_code_id"`                // sys_code.sys_type="open_job_action'
	/*
		sys_code.sys_code_type='open_job_action_event'n
		action_code_id+event_status_code 最终形成状态
	*/
	EventStatusCode *string    `gorm:"column:event_status_code" json:"event_status_code"`
	OpUserID        *string    `gorm:"column:op_user_id" json:"op_user_id"`                                      // 执行人
	CreateTime      *time.Time `gorm:"column:create_time;not null;default:CURRENT_TIMESTAMP" json:"create_time"` // 记录创建时间（数据库自动写入）
	ModifyTime      *time.Time `gorm:"column:modify_time;not null;default:CURRENT_TIMESTAMP" json:"modify_time"` // 记录修改时间（数据库自动写入）
	Comments        *string    `gorm:"column:comments" json:"comments"`                                          // 备注说明
}

// TableName OpenJobEvent's table name
func (*OpenJobEvent) TableName() string {
	return TableNameOpenJobEvent
}

func (*OpenJobEvent) PrimaryKey() []string {
	return []string{"id"}
}