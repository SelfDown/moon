// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNamePubfileAggIssueList = "pubfile_agg_issue_list"

// PubfileAggIssueList mapped from table <pubfile_agg_issue_list>
type PubfileAggIssueList struct {
	ID            int32      `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	AggID         *string    `gorm:"column:agg_id" json:"agg_id"` // ID
	ReqIssueID    string     `gorm:"column:req_issue_id;not null" json:"req_issue_id"`
	IssueKey      *string    `gorm:"column:issue_key" json:"issue_key"`
	IssueTitle    *string    `gorm:"column:issue_title" json:"issue_title"`
	IssueType     *int32     `gorm:"column:issue_type" json:"issue_type"` // 0 开发类，1，项目类，2-环境类
	IssueStatu    *string    `gorm:"column:issue_statu" json:"issue_statu"`
	Issuetype     *string    `gorm:"column:issuetype" json:"issuetype"`                                        // Jira的ISSUE问题类型
	Issupply      *string    `gorm:"column:issupply" json:"issupply"`                                          // 是否为开始集成测试后补录的ISSUE 0 或空 表示 非补录 1 表示补录
	IssueAssignee *string    `gorm:"column:issue_assignee" json:"issue_assignee"`                              // ISSUE经办人
	CreateTime    *time.Time `gorm:"column:create_time;not null;default:CURRENT_TIMESTAMP" json:"create_time"` // 记录创建时间（数据库自动写入）
	ModifyTime    *time.Time `gorm:"column:modify_time;not null;default:CURRENT_TIMESTAMP" json:"modify_time"` // 记录修改时间（数据库自动写入）
	Comments      *string    `gorm:"column:comments" json:"comments"`                                          // 备注说明
}

// TableName PubfileAggIssueList's table name
func (*PubfileAggIssueList) TableName() string {
	return TableNamePubfileAggIssueList
}

func (*PubfileAggIssueList) PrimaryKey() []string {
	return []string{"id"}
}