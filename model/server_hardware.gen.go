// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameServerHardware = "server_hardware"

// ServerHardware mapped from table <server_hardware>
type ServerHardware struct {
	ServerHardwareID string     `gorm:"column:server_hardware_id;primaryKey" json:"server_hardware_id"`           // 主键UUID
	CPUCores         *int32     `gorm:"column:cpu_cores" json:"cpu_cores"`                                        // cpu核心查看每颗CPU封装的是几核
	CPUFrequency     *string    `gorm:"column:cpu_frequency" json:"cpu_frequency"`                                // 如：Intel(R) Xeon(R) CPU E7-4830 v4 @ 2.00GHz
	CPULogicCount    *int32     `gorm:"column:cpu_logic_count" json:"cpu_logic_count"`                            // 逻辑核数
	CPUPhysicalCount *int32     `gorm:"column:cpu_physical_count" json:"cpu_physical_count"`                      // 物理核数
	CPUCache         *int32     `gorm:"column:cpu_cache" json:"cpu_cache"`                                        // cpu缓存(单位KB)
	MemorySize       *int32     `gorm:"column:memory_size" json:"memory_size"`                                    // 内存大小，单位MB
	DiskTotalSize    *int32     `gorm:"column:disk_total_size" json:"disk_total_size"`                            // 服务器磁盘总容量（单位GB）
	DiskCount        *int32     `gorm:"column:disk_count" json:"disk_count"`                                      // 磁盘数量
	Comments         *string    `gorm:"column:comments" json:"comments"`                                          // 备注说明
	ModifyTime       *time.Time `gorm:"column:modify_time;not null;default:CURRENT_TIMESTAMP" json:"modify_time"` // 记录修改时间（数据库自动写入）
	CreateTime       *time.Time `gorm:"column:create_time;not null;default:CURRENT_TIMESTAMP" json:"create_time"` // 记录创建时间（数据库自动写入）
}

// TableName ServerHardware's table name
func (*ServerHardware) TableName() string {
	return TableNameServerHardware
}

func (*ServerHardware) PrimaryKey() []string {
	return []string{"server_hardware_id"}
}