// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameServerSoftUser = "server_soft_user"

// ServerSoftUser mapped from table <server_soft_user>
type ServerSoftUser struct {
	SoftUserID        string     `gorm:"column:soft_user_id;not null" json:"soft_user_id"`
	OssoftUserGroupID string     `gorm:"column:ossoft_user_group_id;not null" json:"ossoft_user_group_id"`
	InstallSoftID     string     `gorm:"column:install_soft_id;not null" json:"install_soft_id"`
	UserName          string     `gorm:"column:user_name;not null" json:"user_name"`
	UserPwd           string     `gorm:"column:user_pwd;not null" json:"user_pwd"`
	IsForbid          *string    `gorm:"column:is_forbid;default:0" json:"is_forbid"`
	PwdEncodeType     *string    `gorm:"column:pwd_encode_type" json:"pwd_encode_type"`
	AddTime           *time.Time `gorm:"column:add_time;not null;default:CURRENT_TIMESTAMP" json:"add_time"`
	InitScript        *string    `gorm:"column:init_script" json:"init_script"`
	IsDefaultUse      *string    `gorm:"column:is_default_use;default:0" json:"is_default_use"`
	Comments          *string    `gorm:"column:comments" json:"comments"`
	UserOrgType       *string    `gorm:"column:user_org_type" json:"user_org_type"`
	UserOrgRelID      *string    `gorm:"column:user_org_rel_id" json:"user_org_rel_id"`
}

// TableName ServerSoftUser's table name
func (*ServerSoftUser) TableName() string {
	return TableNameServerSoftUser
}

func (*ServerSoftUser) PrimaryKey() []string {
	return []string{}
}